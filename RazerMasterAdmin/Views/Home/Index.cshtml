@{
    ViewBag.Title = "Home Page";
    var pList = ViewBag.ProductList;
    var oList = ViewBag.OrderList;
    var memberCount = ViewBag.MemberCount;
    var categoryTotalSale = ViewBag.CategoryTotalSale;
    var Top5Orders = ViewBag.Top5Orders;

    var PurchaseANLS = ViewBag.PurchaseANLS;
    var Revenue = ViewBag.Revenue;
    var CountANLS = ViewBag.CountANLS;
    var JsonMonthANLS = ViewBag.JsonMonthANLS;
    decimal ans;

    if (Convert.ToDecimal((PurchaseANLS[0].ReBuy)) == 0)
    {
        ans = 100;
    }
    else
    {
        ans = Math.Round((Convert.ToDecimal(PurchaseANLS[0].FirstBuy) / Convert.ToDecimal((PurchaseANLS[0].ReBuy))) * 100, 2);
    }
}



<!-- Content -->
<div class="content">
    <!-- Animated -->
    <div class="animated fadeIn">
        <!-- Widgets  -->
        <div class="row">
            <div class="col-lg-3 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="stat-widget-five">
                            <div class="stat-icon dib flat-color-1">
                                <i class="pe-7s-cash"></i>
                            </div>
                            <div class="stat-content">
                                <div class="text-left dib">
                                    <div class="stat-text"><span class="count">@Revenue</span></div>
                                    <div class="stat-heading">Revenue</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="stat-widget-five">
                            <div class="stat-icon dib flat-color-2">
                                <i class="pe-7s-cart"></i>
                            </div>
                            <div class="stat-content">
                                <div class="text-left dib">
                                    <div class="stat-text"><span class="count">@Enumerable.Count(oList)</span></div>
                                    <div class="stat-heading">Orders</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="stat-widget-five">
                            <div class="stat-icon dib flat-color-3">
                                <i class="pe-7s-box2"></i>
                            </div>
                            <div class="stat-content">
                                <div class="text-left dib">
                                    <div class="stat-text"><span class="count">@Enumerable.Count(pList)</span></div>
                                    <div class="stat-heading">Products</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="stat-widget-five">
                            <div class="stat-icon dib flat-color-4">
                                <i class="pe-7s-users"></i>
                            </div>
                            <div class="stat-content">
                                <div class="text-left dib">
                                    <div class="stat-text"><span class="count">@memberCount</span></div>
                                    <div class="stat-heading">Members</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /Widgets -->
        <!--  Traffic  -->
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                    </div>
                    <div class="row">

                        @*訂單月份分析*@
                        <div class="col-lg-8">
                            <div class="card-body">
                                <h4 class="box-title mb-3">Each Categories Revenue within 4 months</h4>
                                <canvas id="TrafficChart"></canvas>
                            </div>
                        </div>

                        @*總類/總金額分析*@
                        <div class="col-lg-4">
                            <div class="card-body">
                                <h4 class="box-title mb-3">Each Categories Revenue</h4>
                                @foreach (var item in categoryTotalSale)
                                {
                                    <div class="progress-box progress-2">
                                        <h4 class="por-title">@item.CategoryName</h4>
                                        <div class="por-txt">$@item.Total</div>
                                        <div class="progress mb-2" style="height: 5px;">
                                            @if (item.Total != 0)
                                            {
                                                <div class="progress-bar @DisplayNameFor(item.CategoryName)" role="progressbar"
                                                     style="width: @((item.Total/Revenue)*100)%;" aria-valuenow="25" aria-valuemin="0"
                                                     aria-valuemax="100">
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div> <!-- /.card-body -->
                        </div>
                    </div> <!-- /.row -->
                    <div class="card-body"></div>
                </div>
            </div><!-- /# column -->
        </div>
        <!--  /Traffic -->
        <div class="clearfix"></div>
        <!-- Orders -->
        <div class="orders">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="box-title">Related Orders from Now</h4>
                        </div>
                        <div class="card-body--">
                            <div class="table-stats order-table ov-h">
                                <table class="table table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>OrderID</th>
                                            <th>Customer</th>
                                            <th>OrderDate</th>
                                            <th>Payment</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Top5Orders)
                                        {

                                            OrderSituation ordersituation = OrderStatus(item.Status);

                                            <tr>
                                                <td>@item.OrderID</td>
                                                <td>@item.CustomerName</td>
                                                <td>@(item.OrderTime.ToString("yyyy-MM-dd HH:mm:ss"))</td>
                                                <td>@item.TotalPrice</td>
                                                <td>
                                                    <span class="badge @ordersituation.color">

                                                        @ordersituation.text
                                                    </span>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div> <!-- /.table-stats -->
                        </div>
                    </div> <!-- /.card -->
                </div> <!-- /.col-lg-8 -->
            </div>
        </div>
        <!-- /.orders -->
        <!-- Calender Chart -->
        <div class="row">
            <div class="col-md-6">
                <div class="card br-0">
                    <h4 class="weather-title box-title">Purchase Analysis</h4>
                    <div class="card-body">
                        <div class="ov-h">
                            <div id="cellPaiChart" class="chartjs-render-monitor"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card br-0">
                    <h4 class="weather-title box-title">Per Orders of Month</h4>
                    <div class="card-body">
                        <div class="ov-h">
                            <canvas id="doughutChart" class="chartjs-render-monitor"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- .animated -->
</div>
<!-- /.content -->
<div class="clearfix"></div>
<!-- Footer -->
<footer class="site-footer">
    <div class="footer-inner bg-white">
        <div class="row">
            <div class="col-sm-6">
                Copyright &copy; 2020 RazerMaster Powered by Ela Admin
            </div>
        </div>
    </div>
</footer>


@section topCSS{
    <style>
        .traffic-chart {
            min-height: 335px;
        }

        #flotPie1 {
            height: 240px;
        }

        .chart-container {
            display: table;
            min-width: 270px;
            text-align: left;
            padding-top: 10px;
            padding-bottom: 10px;
        }

        #flotLine5 {
            height: 105px;
        }

        #flotBarChart {
            height: 150px;
        }

        #cellPaiChart {
            height: 360px;
        }

        /* #doughutChart{
            height:360px;
        }*/
        .badge-waiting{
            background-color:aqua;
        }

        .badge-cancel {
            background-color:orange;
        }

        .badge-unpaid {
            background-color:blueviolet;
        }

       

    </style>
}

@section endJS{
    <script>
        var data = @Html.Raw(JsonMonthANLS);

        var Month = []
        var Mouse = []
        var Keyboard = []
        var Headphone = []
        var Laptop = []
        var Accessory = []

        data.map(x => {
            return Month.push(x.Sales)
        })
        data.map(x => {
            return Mouse.push((x.Mouse == null ? 0 : x.Mouse))
        })
        data.map(x => {
            return Keyboard.push((x.Keyboard == null ? 0 : x.Keyboard))
        })
        data.map(x => {
            return Headphone.push((x.Headphone == null ? 0 : x.Headphone))
        })
        data.map(x => {
            return Laptop.push((x.Laptop == null ? 0 : x.Laptop))
        })
        data.map(x => {
            return Accessory.push((x.Accessory == null ? 0 : x.Accessory))
        })


        jQuery(document).ready(function ($) {
            "use strict";
            // Pie chart flotPie1
            var ctx = document.getElementById("doughutChart");
            ctx.height = 150;
            var myChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    datasets: [{
                        data: @Html.Raw(Json.Encode(CountANLS.Data)),
                        backgroundColor: [
                            "rgba(0, 194, 146, .9)",
                            "rgba(171, 140, 228, .7)",
                            "rgba(3, 169, 243, .5)",
                            "rgba(250, 150, 120, .8)"
                        ],
                        hoverBackgroundColor: [
                            "rgba(0, 194, 146,0.9)",
                            "rgba(171, 140, 228, .7)",
                            "rgba(3, 169, 243, .5)",
                            "rgba(250, 150, 120, .8)"
                        ]
                    }],
                    labels: @Html.Raw(Json.Encode(CountANLS.Date))
                },
                options: {
                    responsive: true
                }
            });
            // Pie chart flotPie1  End
            // cellPaiChart
            var cellPaiChart = [
                { label: "First Purchase", data: [[1, @ans]], color: '#5b83de' },
                { label: "Repurchase", data: [[1, 100-@ans]], color: '#00bfa5' }
            ];
            $.plot('#cellPaiChart', cellPaiChart, {
                series: {
                    pie: {
                        show: true,
                        stroke: {
                            width: 0
                        }
                    }
                },
                legend: {
                    show: false
                }, grid: {
                    hoverable: true,
                    clickable: true
                }

            });
            // cellPaiChart End

            @* 訂單月份分析 *@
            //Traffic chart chart-js

            if ($('#TrafficChart').length) {
                var ctx = document.getElementById("TrafficChart");
                ctx.height = 200;
                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: Month,
                        datasets: [
                            {
                                label: "Laptops",
                                borderColor: "rgba(0, 194, 146, .9)",
                                borderWidth: "1",
                                backgroundColor: "rgba(0, 194, 146, .5)",
                                data: Laptop
                            },
                            {
                                label: "Mice",
                                borderColor: "rgba(171, 140, 228, .9)",
                                borderWidth: "1",
                                backgroundColor: "rgba(171, 140, 228, .5)",
                                data: Mouse
                            },
                            {
                                label: "Keyboards",
                                borderColor: "rgba(3, 169, 243, .9)",
                                borderWidth: "1",
                                backgroundColor: "rgba(3, 169, 243, .5)",
                                data: Keyboard
                            },
                            {
                                label: "Headsets",
                                borderColor: "rgba(250, 150, 120, .9)",
                                borderWidth: "1",
                                backgroundColor: "rgba(250, 150, 120, .5)",
                                data: Headphone
                            },
                            {
                                label: "Accessories",
                                borderColor: "rgba(102, 187, 106, .9)",
                                borderWidth: "1",
                                backgroundColor: "rgba(102, 187, 106, .5)",
                                data: Accessory
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        tooltips: {
                            mode: 'index',
                            intersect: false
                        },
                        hover: {
                            mode: 'nearest',
                            intersect: true
                        }
                    }
                });
            }
            //Traffic chart chart-js  End
        });
    </script>
}

@functions {

    public string DisplayNameFor(string categoryName)
    {
        string color = string.Empty;

        switch (categoryName)
        {
            case "Mouse":
                return color = "bg-flat-color-1";
                break;
            case "Keyboard":
                return color = "bg-flat-color-2";
                break;
            case "Laptop":
                return color = "bg-flat-color-3";
                break;
            case "Accessory":
                return color = "bg-flat-color-4";
                break;
            default:
                return color = "bg-flat-color-5";
                break;
        }

        return color;
    }

    public class OrderSituation
    {
        public string color { get; set; }
        public string text { get; set; }
    }

    public OrderSituation OrderStatus(int status)
    {

        OrderSituation ordersituation = new OrderSituation();

        switch (status)
        {
            case -2:
                return new OrderSituation
                {
                    color = "badge-waiting",
                    text = "Waiting"
                };
            case -1:
                return new OrderSituation
                {
                    color = "badge-cancel",
                    text = "Cancel"
                };
            case 0:
                return new OrderSituation
                {
                    color = "badge-unpaid",
                    text = "Unpaid"

                };
            case 1:
                return new OrderSituation
                {
                    color = "badge-completed",
                    text = "Done"

                };
            case 2:
                return new OrderSituation
                {
                    color = "badge-pending",
                    text = "Delivered"

                };
        }

        return null;
    }
}
