@model RazerMaster.Areas.Member.ViewModels.RegisterViewModel
@using GoogleRecaptchaMvc
@{
    ViewBag.Title = "Register";
}
@section topCSS{
    <link href="~/Areas/Member/Assets/css/login.css" rel="stylesheet" />
    <style>
        .g-recaptcha {
            display: flex;
            justify-content: center;
        }
    </style>
}
@section endJS{
    <script src="https://www.google.com/recaptcha/api.js?hl=zh-TW" async defer></script>
}
<div class="logo">
    <a href="/">
        <img src="/Assets/Img/RazerMasterLogo4.svg" alt="" srcset="">
    </a>
</div>
<div class="container">
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @using (Html.BeginForm("Register", "Member", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-row d-flex flex-column align-content-center ">

            <div class="col-md-4 loginbox text-center">
                <h3>Register</h3>
                <hr />
                <div class="form-group">
                    @Html.TextBoxFor(m => m.RealName, new { @class = "form-control", @placeholder = "Real Name" })
                    @Html.ValidationMessageFor(m => m.RealName, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.NickName, new { @class = "form-control", @placeholder = "NickName" })
                    @Html.ValidationMessageFor(m => m.NickName, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password", @data_toggle = "popover", @data_placement = "bottom", @data_content = "The password must be at least 8 characters, with at least 1 digit and 1 letter, and no special symbol." })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "ConfirmPassword" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })

                </div>
                @using (Html.BeginForm("Register", "Member", FormMethod.Post))
                {
                    @Html.RecaptchaV2("6Ld44cIZAAAAANyFKClaMN0Y0w33ngLF2V-bN5Z3")
                }
                <button type="submit" class="btn btn-primary col-md-4 my-5">Sign in</button>
            </div>
        </div>
        @*<div class="form-row d-flex flex-column align-content-center">
                <div class="col-md-4">

                    <button type="submit" class="btn btn-primary col-md-4 my-5">Sign in</button>
                </div>
            </div>*@
    }
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}